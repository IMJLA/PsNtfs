<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="166" errors="0" failures="23" not-run="0" inconclusive="0" ignored="0" skipped="2" invalid="0" date="2022-08-28" time="10:42:01">
  <environment os-version="10.0.19044" user="Owner" platform="Microsoft Windows 10 Pro|C:\WINDOWS|\Device\Harddisk0\Partition2" machine-name="JLA-LOFTHTPC" clr-version="Unknown" nunit-version="2.5.8.0" cwd="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests" user-domain="JLA-LoftHTPC" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="3.172" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Function.tests.ps1" executed="True" result="Success" success="True" time="0.5018" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Function.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="function 'GetDirectories.ps1'" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="function 'GetDirectories.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'GetDirectories.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0109" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'GetDirectories.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\private\GetDirectories.ps1&quot;)" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'GetDirectories.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0189" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'GetDirectories.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\private\GetDirectories.ps1&quot;)" time="0.0189" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-SimpleProperty.ps1'" executed="True" result="Success" success="True" time="0.0655" asserts="0" description="function 'ConvertTo-SimpleProperty.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-SimpleProperty.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0126" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-SimpleProperty.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\ConvertTo-SimpleProperty.ps1&quot;)" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-SimpleProperty.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0103" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-SimpleProperty.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\ConvertTo-SimpleProperty.ps1&quot;)" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Expand-AccountPermission.ps1'" executed="True" result="Success" success="True" time="0.0924" asserts="0" description="function 'Expand-AccountPermission.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Expand-AccountPermission.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Expand-AccountPermission.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Expand-AccountPermission.ps1&quot;)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Expand-AccountPermission.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0074" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Expand-AccountPermission.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Expand-AccountPermission.ps1&quot;)" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Expand-Acl.ps1'" executed="True" result="Success" success="True" time="0.1174" asserts="0" description="function 'Expand-Acl.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Expand-Acl.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0058" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Expand-Acl.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Expand-Acl.ps1&quot;)" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Expand-Acl.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0113" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Expand-Acl.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Expand-Acl.ps1&quot;)" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Find-ServerNameInPath.ps1'" executed="True" result="Success" success="True" time="0.1434" asserts="0" description="function 'Find-ServerNameInPath.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Find-ServerNameInPath.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0131" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Find-ServerNameInPath.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Find-ServerNameInPath.ps1&quot;)" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Find-ServerNameInPath.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.009" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Find-ServerNameInPath.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Find-ServerNameInPath.ps1&quot;)" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Format-FolderPermission.ps1'" executed="True" result="Success" success="True" time="0.171" asserts="0" description="function 'Format-FolderPermission.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Format-FolderPermission.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0073" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Format-FolderPermission.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-FolderPermission.ps1&quot;)" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Format-FolderPermission.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0136" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Format-FolderPermission.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-FolderPermission.ps1&quot;)" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Format-SecurityPrincipal.ps1'" executed="True" result="Success" success="True" time="0.1953" asserts="0" description="function 'Format-SecurityPrincipal.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Format-SecurityPrincipal.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0095" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Format-SecurityPrincipal.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-SecurityPrincipal.ps1&quot;)" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Format-SecurityPrincipal.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0095" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Format-SecurityPrincipal.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-SecurityPrincipal.ps1&quot;)" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-FolderAce.ps1'" executed="True" result="Success" success="True" time="0.2201" asserts="0" description="function 'Get-FolderAce.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-FolderAce.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0131" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-FolderAce.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-FolderAce.ps1&quot;)" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-FolderAce.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0053" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-FolderAce.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-FolderAce.ps1&quot;)" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-FolderTarget.ps1'" executed="True" result="Success" success="True" time="0.2449" asserts="0" description="function 'Get-FolderTarget.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-FolderTarget.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0102" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-FolderTarget.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-FolderTarget.ps1&quot;)" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-FolderTarget.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0068" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-FolderTarget.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-FolderTarget.ps1&quot;)" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-Subfolder.ps1'" executed="True" result="Success" success="True" time="0.2742" asserts="0" description="function 'Get-Subfolder.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-Subfolder.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-Subfolder.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-Subfolder.ps1&quot;)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-Subfolder.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0094" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-Subfolder.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-Subfolder.ps1&quot;)" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-Win32MappedLogicalDisk.ps1'" executed="True" result="Success" success="True" time="0.2983" asserts="0" description="function 'Get-Win32MappedLogicalDisk.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-Win32MappedLogicalDisk.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0065" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-Win32MappedLogicalDisk.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-Win32MappedLogicalDisk.ps1&quot;)" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-Win32MappedLogicalDisk.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0119" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-Win32MappedLogicalDisk.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-Win32MappedLogicalDisk.ps1&quot;)" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'New-NtfsAclIssueReport.ps1'" executed="True" result="Success" success="True" time="0.3225" asserts="0" description="function 'New-NtfsAclIssueReport.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'New-NtfsAclIssueReport.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.009" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'New-NtfsAclIssueReport.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\New-NtfsAclIssueReport.ps1&quot;)" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'New-NtfsAclIssueReport.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0062" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'New-NtfsAclIssueReport.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\New-NtfsAclIssueReport.ps1&quot;)" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1" executed="True" result="Failure" success="False" time="1.803" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="help for ConvertTo-SimpleProperty" executed="True" result="Failure" success="False" time="0.2168" asserts="0" description="help for ConvertTo-SimpleProperty">
            <results>
              <test-suite type="TestFixture" name="help for ConvertTo-SimpleProperty.- Help for parameter 'InputObject'" executed="True" result="Failure" success="False" time="0.0721" asserts="0" description="help for ConvertTo-SimpleProperty.- Help for parameter 'InputObject'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-SimpleProperty.- Help for parameter 'InputObject'.has a description" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-SimpleProperty.- Help for parameter 'InputObject'.has the correct [mandatory] value" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-SimpleProperty.- Help for parameter 'InputObject'.has the correct parameter type" time="0.0113" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-SimpleProperty.- Help for parameter 'Prefix'" executed="True" result="Failure" success="False" time="0.1091" asserts="0" description="help for ConvertTo-SimpleProperty.- Help for parameter 'Prefix'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-SimpleProperty.- Help for parameter 'Prefix'.has a description" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-SimpleProperty.- Help for parameter 'Prefix'.has the correct [mandatory] value" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-SimpleProperty.- Help for parameter 'Prefix'.has the correct parameter type" time="0.0194" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-SimpleProperty.- Help for parameter 'Property'" executed="True" result="Failure" success="False" time="0.1513" asserts="0" description="help for ConvertTo-SimpleProperty.- Help for parameter 'Property'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-SimpleProperty.- Help for parameter 'Property'.has a description" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-SimpleProperty.- Help for parameter 'Property'.has the correct [mandatory] value" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-SimpleProperty.- Help for parameter 'Property'.has the correct parameter type" time="0.0147" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-SimpleProperty.- Help for parameter 'PropertyDictionary'" executed="True" result="Failure" success="False" time="0.1954" asserts="0" description="help for ConvertTo-SimpleProperty.- Help for parameter 'PropertyDictionary'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-SimpleProperty.- Help for parameter 'PropertyDictionary'.has a description" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-SimpleProperty.- Help for parameter 'PropertyDictionary'.has the correct [mandatory] value" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-SimpleProperty.- Help for parameter 'PropertyDictionary'.has the correct parameter type" time="0.015" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 9
Actual length:   28
Strings differ at index 0.
Expected: 'Hashtable'
But was:  'System.Collections.Hashtable'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for ConvertTo-SimpleProperty.is not auto-generated" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for ConvertTo-SimpleProperty.has a description" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for ConvertTo-SimpleProperty.has example code" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for ConvertTo-SimpleProperty.has example help" time="0.007" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Expand-AccountPermission" executed="True" result="Success" success="True" time="0.3258" asserts="0" description="help for Expand-AccountPermission">
            <results>
              <test-suite type="TestFixture" name="help for Expand-AccountPermission.- Help for parameter 'AccountPermission'" executed="True" result="Success" success="True" time="0.0542" asserts="0" description="help for Expand-AccountPermission.- Help for parameter 'AccountPermission'">
                <results>
                  <test-case description="has a description" name="help for Expand-AccountPermission.- Help for parameter 'AccountPermission'.has a description" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-AccountPermission.- Help for parameter 'AccountPermission'.has the correct [mandatory] value" time="0.0124" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-AccountPermission.- Help for parameter 'AccountPermission'.has the correct parameter type" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Expand-AccountPermission.- Help for parameter 'PropertiesToExclude'" executed="True" result="Success" success="True" time="0.0776" asserts="0" description="help for Expand-AccountPermission.- Help for parameter 'PropertiesToExclude'">
                <results>
                  <test-case description="has a description" name="help for Expand-AccountPermission.- Help for parameter 'PropertiesToExclude'.has a description" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-AccountPermission.- Help for parameter 'PropertiesToExclude'.has the correct [mandatory] value" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-AccountPermission.- Help for parameter 'PropertiesToExclude'.has the correct parameter type" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Expand-AccountPermission.is not auto-generated" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Expand-AccountPermission.has a description" time="0.004" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Expand-AccountPermission.has example code" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Expand-AccountPermission.has example help" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Expand-Acl" executed="True" result="Success" success="True" time="0.3925" asserts="0" description="help for Expand-Acl">
            <results>
              <test-suite type="TestFixture" name="help for Expand-Acl.- Help for parameter 'InputObject'" executed="True" result="Success" success="True" time="0.0486" asserts="0" description="help for Expand-Acl.- Help for parameter 'InputObject'">
                <results>
                  <test-case description="has a description" name="help for Expand-Acl.- Help for parameter 'InputObject'.has a description" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-Acl.- Help for parameter 'InputObject'.has the correct [mandatory] value" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-Acl.- Help for parameter 'InputObject'.has the correct parameter type" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Expand-Acl.is not auto-generated" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Expand-Acl.has a description" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Expand-Acl.has example code" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Expand-Acl.has example help" time="0.0108" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Find-ServerNameInPath" executed="True" result="Failure" success="False" time="0.4723" asserts="0" description="help for Find-ServerNameInPath">
            <results>
              <test-suite type="TestFixture" name="help for Find-ServerNameInPath.- Help for parameter 'LiteralPath'" executed="True" result="Failure" success="False" time="0.0538" asserts="0" description="help for Find-ServerNameInPath.- Help for parameter 'LiteralPath'">
                <results>
                  <test-case description="has a description" name="help for Find-ServerNameInPath.- Help for parameter 'LiteralPath'.has a description" time="0.0182" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Find-ServerNameInPath.- Help for parameter 'LiteralPath'.has the correct [mandatory] value" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Find-ServerNameInPath.- Help for parameter 'LiteralPath'.has the correct parameter type" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Find-ServerNameInPath.is not auto-generated" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Find-ServerNameInPath.has a description" time="0.003" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Find-ServerNameInPath.has example code" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Find-ServerNameInPath.has example help" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Format-FolderPermission" executed="True" result="Failure" success="False" time="0.6069" asserts="0" description="help for Format-FolderPermission">
            <results>
              <test-suite type="TestFixture" name="help for Format-FolderPermission.- Help for parameter 'FileSystemRightsToIgnore'" executed="True" result="Failure" success="False" time="0.0846" asserts="0" description="help for Format-FolderPermission.- Help for parameter 'FileSystemRightsToIgnore'">
                <results>
                  <test-case description="has a description" name="help for Format-FolderPermission.- Help for parameter 'FileSystemRightsToIgnore'.has a description" time="0.0315" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-FolderPermission.- Help for parameter 'FileSystemRightsToIgnore'.has the correct [mandatory] value" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-FolderPermission.- Help for parameter 'FileSystemRightsToIgnore'.has the correct parameter type" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 8
Actual length:   15
Strings differ at index 1.
Expected: 'String[]'
But was:  'System.String[]'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Format-FolderPermission.- Help for parameter 'UserPermission'" executed="True" result="Failure" success="False" time="0.115" asserts="0" description="help for Format-FolderPermission.- Help for parameter 'UserPermission'">
                <results>
                  <test-case description="has a description" name="help for Format-FolderPermission.- Help for parameter 'UserPermission'.has a description" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-FolderPermission.- Help for parameter 'UserPermission'.has the correct [mandatory] value" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-FolderPermission.- Help for parameter 'UserPermission'.has the correct parameter type" time="0.0158" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Format-FolderPermission.is not auto-generated" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Format-FolderPermission.has a description" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Format-FolderPermission.has example code" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Format-FolderPermission.has example help" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Format-SecurityPrincipal" executed="True" result="Failure" success="False" time="0.6776" asserts="0" description="help for Format-SecurityPrincipal">
            <results>
              <test-suite type="TestFixture" name="help for Format-SecurityPrincipal.- Help for parameter 'SecurityPrincipal'" executed="True" result="Failure" success="False" time="0.0584" asserts="0" description="help for Format-SecurityPrincipal.- Help for parameter 'SecurityPrincipal'">
                <results>
                  <test-case description="has a description" name="help for Format-SecurityPrincipal.- Help for parameter 'SecurityPrincipal'.has a description" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-SecurityPrincipal.- Help for parameter 'SecurityPrincipal'.has the correct [mandatory] value" time="0.0121" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-SecurityPrincipal.- Help for parameter 'SecurityPrincipal'.has the correct parameter type" time="0.0124" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Format-SecurityPrincipal.is not auto-generated" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Format-SecurityPrincipal.has a description" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Format-SecurityPrincipal.has example code" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Format-SecurityPrincipal.has example help" time="0.005" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-FolderAce" executed="True" result="Failure" success="False" time="0.8858" asserts="0" description="help for Get-FolderAce">
            <results>
              <test-suite type="TestFixture" name="help for Get-FolderAce.- Help for parameter 'AccountType'" executed="True" result="Success" success="True" time="0.0602" asserts="0" description="help for Get-FolderAce.- Help for parameter 'AccountType'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderAce.- Help for parameter 'AccountType'.has a description" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderAce.- Help for parameter 'AccountType'.has the correct [mandatory] value" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderAce.- Help for parameter 'AccountType'.has the correct parameter type" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FolderAce.- Help for parameter 'IncludeExplicitRules'" executed="True" result="Success" success="True" time="0.0887" asserts="0" description="help for Get-FolderAce.- Help for parameter 'IncludeExplicitRules'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderAce.- Help for parameter 'IncludeExplicitRules'.has a description" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderAce.- Help for parameter 'IncludeExplicitRules'.has the correct [mandatory] value" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderAce.- Help for parameter 'IncludeExplicitRules'.has the correct parameter type" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FolderAce.- Help for parameter 'IncludeInherited'" executed="True" result="Success" success="True" time="0.1178" asserts="0" description="help for Get-FolderAce.- Help for parameter 'IncludeInherited'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderAce.- Help for parameter 'IncludeInherited'.has a description" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderAce.- Help for parameter 'IncludeInherited'.has the correct [mandatory] value" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderAce.- Help for parameter 'IncludeInherited'.has the correct parameter type" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FolderAce.- Help for parameter 'LiteralPath'" executed="True" result="Success" success="True" time="0.1465" asserts="0" description="help for Get-FolderAce.- Help for parameter 'LiteralPath'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderAce.- Help for parameter 'LiteralPath'.has a description" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderAce.- Help for parameter 'LiteralPath'.has the correct [mandatory] value" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderAce.- Help for parameter 'LiteralPath'.has the correct parameter type" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FolderAce.- Help for parameter 'Sections'" executed="True" result="Failure" success="False" time="0.1851" asserts="0" description="help for Get-FolderAce.- Help for parameter 'Sections'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderAce.- Help for parameter 'Sections'.has a description" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderAce.- Help for parameter 'Sections'.has the correct [mandatory] value" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderAce.- Help for parameter 'Sections'.has the correct parameter type" time="0.0188" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'AccessControlSections', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-FolderAce.is not auto-generated" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-FolderAce.has a description" time="0.004" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-FolderAce.has example code" time="0.0095" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected a value, but got $null or empty.</message>
                  <stack-trace>at ($commandHelp.Examples.Example | Select-Object -First 1).Code | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:80
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:80</stack-trace>
                </failure>
              </test-case>
              <test-case description="has example help" name="help for Get-FolderAce.has example help" time="0.0176" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected a value, but got $null or empty.</message>
                  <stack-trace>at ($commandHelp.Examples.Example.Remarks | Select-Object -First 1).Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:85
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:85</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-FolderTarget" executed="True" result="Failure" success="False" time="0.9596" asserts="0" description="help for Get-FolderTarget">
            <results>
              <test-suite type="TestFixture" name="help for Get-FolderTarget.- Help for parameter 'FolderPath'" executed="True" result="Failure" success="False" time="0.055" asserts="0" description="help for Get-FolderTarget.- Help for parameter 'FolderPath'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderTarget.- Help for parameter 'FolderPath'.has a description" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderTarget.- Help for parameter 'FolderPath'.has the correct [mandatory] value" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderTarget.- Help for parameter 'FolderPath'.has the correct parameter type" time="0.0131" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 8
Actual length:   15
Strings differ at index 1.
Expected: 'String[]'
But was:  'System.String[]'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-FolderTarget.is not auto-generated" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-FolderTarget.has a description" time="0.006" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-FolderTarget.has example code" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-FolderTarget.has example help" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-Subfolder" executed="True" result="Failure" success="False" time="1.0894" asserts="0" description="help for Get-Subfolder">
            <results>
              <test-suite type="TestFixture" name="help for Get-Subfolder.- Help for parameter 'FolderRecursionDepth'" executed="True" result="Failure" success="False" time="0.0799" asserts="0" description="help for Get-Subfolder.- Help for parameter 'FolderRecursionDepth'">
                <results>
                  <test-case description="has a description" name="help for Get-Subfolder.- Help for parameter 'FolderRecursionDepth'.has a description" time="0.0108" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-Subfolder.- Help for parameter 'FolderRecursionDepth'.has the correct [mandatory] value" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-Subfolder.- Help for parameter 'FolderRecursionDepth'.has the correct parameter type" time="0.0122" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 5
Actual length:   12
Strings differ at index 0.
Expected: 'Int32'
But was:  'System.Int32'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-Subfolder.- Help for parameter 'TargetPath'" executed="True" result="Failure" success="False" time="0.1136" asserts="0" description="help for Get-Subfolder.- Help for parameter 'TargetPath'">
                <results>
                  <test-case description="has a description" name="help for Get-Subfolder.- Help for parameter 'TargetPath'.has a description" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-Subfolder.- Help for parameter 'TargetPath'.has the correct [mandatory] value" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-Subfolder.- Help for parameter 'TargetPath'.has the correct parameter type" time="0.0134" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-Subfolder.is not auto-generated" time="0.015" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-Subfolder.has a description" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-Subfolder.has example code" time="0.011" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-Subfolder.has example help" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-Win32MappedLogicalDisk" executed="True" result="Failure" success="False" time="1.339" asserts="0" description="help for Get-Win32MappedLogicalDisk">
            <results>
              <test-suite type="TestFixture" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'ComputerName'" executed="True" result="Failure" success="False" time="0.0652" asserts="0" description="help for Get-Win32MappedLogicalDisk.- Help for parameter 'ComputerName'">
                <results>
                  <test-case description="has a description" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'ComputerName'.has a description" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'ComputerName'.has the correct [mandatory] value" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'ComputerName'.has the correct parameter type" time="0.015" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'LogMsgCache'" executed="True" result="Failure" success="False" time="0.0979" asserts="0" description="help for Get-Win32MappedLogicalDisk.- Help for parameter 'LogMsgCache'">
                <results>
                  <test-case description="has a description" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'LogMsgCache'.has a description" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'LogMsgCache'.has the correct [mandatory] value" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'LogMsgCache'.has the correct parameter type" time="0.0171" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 9
Actual length:   28
Strings differ at index 0.
Expected: 'Hashtable'
But was:  'System.Collections.Hashtable'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'ThisFqdn'" executed="True" result="Failure" success="False" time="0.1286" asserts="0" description="help for Get-Win32MappedLogicalDisk.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'ThisFqdn'.has a description" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0165" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'ThisHostName'" executed="True" result="Failure" success="False" time="0.1667" asserts="0" description="help for Get-Win32MappedLogicalDisk.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'ThisHostName'.has a description" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0201" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'WhoAmI'" executed="True" result="Failure" success="False" time="0.2188" asserts="0" description="help for Get-Win32MappedLogicalDisk.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'WhoAmI'.has a description" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.012" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-Win32MappedLogicalDisk.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0199" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-Win32MappedLogicalDisk.is not auto-generated" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-Win32MappedLogicalDisk.has a description" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-Win32MappedLogicalDisk.has example code" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-Win32MappedLogicalDisk.has example help" time="0.007" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for New-NtfsAclIssueReport" executed="True" result="Failure" success="False" time="1.4821" asserts="0" description="help for New-NtfsAclIssueReport">
            <results>
              <test-suite type="TestFixture" name="help for New-NtfsAclIssueReport.- Help for parameter 'FolderPermissions'" executed="True" result="Failure" success="False" time="0.0616" asserts="0" description="help for New-NtfsAclIssueReport.- Help for parameter 'FolderPermissions'">
                <results>
                  <test-case description="has a description" name="help for New-NtfsAclIssueReport.- Help for parameter 'FolderPermissions'.has a description" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-NtfsAclIssueReport.- Help for parameter 'FolderPermissions'.has the correct [mandatory] value" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-NtfsAclIssueReport.- Help for parameter 'FolderPermissions'.has the correct parameter type" time="0.0094" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-NtfsAclIssueReport.- Help for parameter 'GroupNamingConvention'" executed="True" result="Failure" success="False" time="0.0969" asserts="0" description="help for New-NtfsAclIssueReport.- Help for parameter 'GroupNamingConvention'">
                <results>
                  <test-case description="has a description" name="help for New-NtfsAclIssueReport.- Help for parameter 'GroupNamingConvention'.has a description" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-NtfsAclIssueReport.- Help for parameter 'GroupNamingConvention'.has the correct [mandatory] value" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-NtfsAclIssueReport.- Help for parameter 'GroupNamingConvention'.has the correct parameter type" time="0.0133" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 11
Actual length:   40
Strings differ at index 1.
Expected: 'ScriptBlock'
But was:  'System.Management.Automation.ScriptBlock'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-NtfsAclIssueReport.- Help for parameter 'UserPermissions'" executed="True" result="Failure" success="False" time="0.128" asserts="0" description="help for New-NtfsAclIssueReport.- Help for parameter 'UserPermissions'">
                <results>
                  <test-case description="has a description" name="help for New-NtfsAclIssueReport.- Help for parameter 'UserPermissions'.has a description" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-NtfsAclIssueReport.- Help for parameter 'UserPermissions'.has the correct [mandatory] value" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-NtfsAclIssueReport.- Help for parameter 'UserPermissions'.has the correct parameter type" time="0.0175" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for New-NtfsAclIssueReport.is not auto-generated" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for New-NtfsAclIssueReport.has a description" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for New-NtfsAclIssueReport.has example code" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for New-NtfsAclIssueReport.has example help" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Manifest.tests.ps1" executed="True" result="Failure" success="False" time="0.3077" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Manifest.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="module manifest 'PsNtfs.psd1'" executed="True" result="Failure" success="False" time="0.0639" asserts="0" description="module manifest 'PsNtfs.psd1'">
            <results>
              <test-suite type="TestFixture" name="module manifest 'PsNtfs.psd1'.- Validation" executed="True" result="Failure" success="False" time="0.0606" asserts="0" description="module manifest 'PsNtfs.psd1'.- Validation">
                <results>
                  <test-case description="is a valid manifest" name="module manifest 'PsNtfs.psd1'.- Validation.is a valid manifest" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid name in the manifest" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid name in the manifest" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid root module" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid root module" time="0.011" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   11
Strings differ at index 6.
Expected: 'PsNtfs'
But was:  'PsNtfs.psm1'
           ------^</message>
                      <stack-trace>at $manifestData.RootModule | Should -Be $moduleName, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Manifest.tests.ps1:36
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Manifest.tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has a valid version" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid version" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid description" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid description" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid author" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid author" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid guid" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid guid" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid copyright" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid copyright" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Git tagging" executed="True" result="Ignored" success="True" time="0.0839" asserts="0" description="Git tagging">
            <results>
              <test-suite type="TestFixture" name="Git tagging.- Git tag version ''" executed="True" result="Ignored" success="True" time="0.0142" asserts="0" description="Git tagging.- Git tag version ''">
                <results>
                  <test-case description="is a valid version" name="Git tagging.- Git tag version ''.is a valid version" time="0.0068" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="matches the module manifest version" name="Git tagging.- Git tag version ''.matches the module manifest version" time="0.003" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Metadata.tests.ps1" executed="True" result="Success" success="True" time="0.1961" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Metadata.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="text files" executed="True" result="Success" success="True" time="0.023" asserts="0" description="text files">
            <results>
              <test-suite type="TestFixture" name="text files.- File Encoding" executed="True" result="Success" success="True" time="0.0101" asserts="0" description="text files.- File Encoding">
                <results>
                  <test-case description="do not use Unicode/UTF-16 encoding" name="text files.- File Encoding.do not use Unicode/UTF-16 encoding" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="text files.- Indentations" executed="True" result="Success" success="True" time="0.0197" asserts="0" description="text files.- Indentations">
                <results>
                  <test-case description="do not use tabs for indentations" name="text files.- Indentations.do not use tabs for indentations" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Module.tests.ps1" executed="True" result="Success" success="True" time="0.1584" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Module.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="PowerShell files in module 'PsNtfs'" executed="True" result="Success" success="True" time="0.0445" asserts="0" description="PowerShell files in module 'PsNtfs'">
            <results>
              <test-suite type="ParameterizedTest" name="PowerShell files in module 'PsNtfs'.'&lt;Script&gt;' can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.039" asserts="0" description="'&lt;Script&gt;' can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\dist\2.0.43\PsNtfs\PsNtfs.psd1' can be tokenized by the PowerShell parser without any errors" name="PowerShell files in module 'PsNtfs'.'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\dist\2.0.43\PsNtfs\PsNtfs.psd1' can be tokenized by the PowerShell parser without any errors" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\dist\2.0.43\PsNtfs\PsNtfs.psm1' can be tokenized by the PowerShell parser without any errors" name="PowerShell files in module 'PsNtfs'.'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\dist\2.0.43\PsNtfs\PsNtfs.psm1' can be tokenized by the PowerShell parser without any errors" time="0.0251" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="module 'PsNtfs'" executed="True" result="Success" success="True" time="0.072" asserts="0" description="module 'PsNtfs'">
            <results>
              <test-suite type="ParameterizedTest" name="module 'PsNtfs'.can be imported without any errors" executed="True" result="Success" success="True" time="0.023" asserts="0" description="can be imported without any errors">
                <results>
                  <test-case description="can be imported without any errors" name="module 'PsNtfs'.can be imported without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\dist\2.0.43\PsNtfs\PsNtfs.psm1&quot;)" time="0.023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Project.tests.ps1" executed="True" result="Success" success="True" time="0.205" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Project.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="change log" executed="True" result="Success" success="True" time="0.0184" asserts="0" description="change log">
            <results>
              <test-suite type="TestFixture" name="change log.- Version" executed="True" result="Success" success="True" time="0.0145" asserts="0" description="change log.- Version">
                <results>
                  <test-case description="has a valid version" name="change log.- Version.has a valid version" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the same version as the manifest" name="change log.- Version.has the same version as the manifest" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>