<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="292" errors="0" failures="45" not-run="0" inconclusive="0" ignored="0" skipped="2" invalid="0" date="2024-02-18" time="08:27:19">
  <environment platform="Microsoft Windows 10 Pro|C:\WINDOWS|\Device\Harddisk0\Partition2" cwd="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests" user-domain="JLA-LoftHTPC" os-version="10.0.19044" nunit-version="2.5.8.0" clr-version="Unknown" machine-name="JLA-LOFTHTPC" user="Owner" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="3.5208" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Function.tests.ps1" executed="True" result="Success" success="True" time="0.52" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Function.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="function 'GetDirectories.ps1'" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="function 'GetDirectories.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'GetDirectories.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0069" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'GetDirectories.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\private\GetDirectories.ps1&quot;)" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'GetDirectories.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0276" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'GetDirectories.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\private\GetDirectories.ps1&quot;)" time="0.0276" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'ConvertTo-SimpleProperty.ps1'" executed="True" result="Success" success="True" time="0.0566" asserts="0" description="function 'ConvertTo-SimpleProperty.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-SimpleProperty.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0079" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'ConvertTo-SimpleProperty.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\ConvertTo-SimpleProperty.ps1&quot;)" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'ConvertTo-SimpleProperty.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0071" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'ConvertTo-SimpleProperty.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\ConvertTo-SimpleProperty.ps1&quot;)" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Expand-AccountPermission.ps1'" executed="True" result="Success" success="True" time="0.074" asserts="0" description="function 'Expand-AccountPermission.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Expand-AccountPermission.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0063" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Expand-AccountPermission.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Expand-AccountPermission.ps1&quot;)" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Expand-AccountPermission.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0072" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Expand-AccountPermission.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Expand-AccountPermission.ps1&quot;)" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Expand-Acl.ps1'" executed="True" result="Success" success="True" time="0.1015" asserts="0" description="function 'Expand-Acl.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Expand-Acl.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0126" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Expand-Acl.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Expand-Acl.ps1&quot;)" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Expand-Acl.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0103" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Expand-Acl.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Expand-Acl.ps1&quot;)" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Find-ServerNameInPath.ps1'" executed="True" result="Success" success="True" time="0.1215" asserts="0" description="function 'Find-ServerNameInPath.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Find-ServerNameInPath.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0097" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Find-ServerNameInPath.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Find-ServerNameInPath.ps1&quot;)" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Find-ServerNameInPath.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0071" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Find-ServerNameInPath.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Find-ServerNameInPath.ps1&quot;)" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Format-SecurityPrincipal.ps1'" executed="True" result="Success" success="True" time="0.1448" asserts="0" description="function 'Format-SecurityPrincipal.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Format-SecurityPrincipal.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Format-SecurityPrincipal.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-SecurityPrincipal.ps1&quot;)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Format-SecurityPrincipal.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0058" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Format-SecurityPrincipal.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-SecurityPrincipal.ps1&quot;)" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Format-SecurityPrincipalMember.ps1'" executed="True" result="Success" success="True" time="0.1607" asserts="0" description="function 'Format-SecurityPrincipalMember.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Format-SecurityPrincipalMember.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0065" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Format-SecurityPrincipalMember.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-SecurityPrincipalMember.ps1&quot;)" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Format-SecurityPrincipalMember.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0059" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Format-SecurityPrincipalMember.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-SecurityPrincipalMember.ps1&quot;)" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Format-SecurityPrincipalMemberUser.ps1'" executed="True" result="Success" success="True" time="0.1856" asserts="0" description="function 'Format-SecurityPrincipalMemberUser.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Format-SecurityPrincipalMemberUser.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Format-SecurityPrincipalMemberUser.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-SecurityPrincipalMemberUser.ps1&quot;)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Format-SecurityPrincipalMemberUser.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0062" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Format-SecurityPrincipalMemberUser.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-SecurityPrincipalMemberUser.ps1&quot;)" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Format-SecurityPrincipalName.ps1'" executed="True" result="Success" success="True" time="0.2022" asserts="0" description="function 'Format-SecurityPrincipalName.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Format-SecurityPrincipalName.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.007" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Format-SecurityPrincipalName.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-SecurityPrincipalName.ps1&quot;)" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Format-SecurityPrincipalName.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0058" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Format-SecurityPrincipalName.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-SecurityPrincipalName.ps1&quot;)" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Format-SecurityPrincipalUser.ps1'" executed="True" result="Success" success="True" time="0.2212" asserts="0" description="function 'Format-SecurityPrincipalUser.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Format-SecurityPrincipalUser.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0089" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Format-SecurityPrincipalUser.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-SecurityPrincipalUser.ps1&quot;)" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Format-SecurityPrincipalUser.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0072" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Format-SecurityPrincipalUser.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-SecurityPrincipalUser.ps1&quot;)" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-DirectorySecurity.ps1'" executed="True" result="Success" success="True" time="0.2384" asserts="0" description="function 'Get-DirectorySecurity.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-DirectorySecurity.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0068" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-DirectorySecurity.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-DirectorySecurity.ps1&quot;)" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-DirectorySecurity.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0066" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-DirectorySecurity.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-DirectorySecurity.ps1&quot;)" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-FileSystemAccessRule.ps1'" executed="True" result="Success" success="True" time="0.2593" asserts="0" description="function 'Get-FileSystemAccessRule.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-FileSystemAccessRule.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0098" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-FileSystemAccessRule.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-FileSystemAccessRule.ps1&quot;)" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-FileSystemAccessRule.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0072" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-FileSystemAccessRule.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-FileSystemAccessRule.ps1&quot;)" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-FolderAcl.ps1'" executed="True" result="Success" success="True" time="0.2759" asserts="0" description="function 'Get-FolderAcl.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-FolderAcl.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0072" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-FolderAcl.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-FolderAcl.ps1&quot;)" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-FolderAcl.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0058" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-FolderAcl.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-FolderAcl.ps1&quot;)" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-OwnerAce.ps1'" executed="True" result="Success" success="True" time="0.2985" asserts="0" description="function 'Get-OwnerAce.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-OwnerAce.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0055" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-OwnerAce.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-OwnerAce.ps1&quot;)" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-OwnerAce.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.008" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-OwnerAce.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-OwnerAce.ps1&quot;)" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-ServerFromFilePath.ps1'" executed="True" result="Success" success="True" time="0.3137" asserts="0" description="function 'Get-ServerFromFilePath.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-ServerFromFilePath.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0057" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-ServerFromFilePath.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-ServerFromFilePath.ps1&quot;)" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-ServerFromFilePath.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0067" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-ServerFromFilePath.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-ServerFromFilePath.ps1&quot;)" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-Subfolder.ps1'" executed="True" result="Success" success="True" time="0.336" asserts="0" description="function 'Get-Subfolder.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-Subfolder.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.009" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-Subfolder.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-Subfolder.ps1&quot;)" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-Subfolder.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0067" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-Subfolder.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-Subfolder.ps1&quot;)" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'New-NtfsAclIssueReport.ps1'" executed="True" result="Success" success="True" time="0.3653" asserts="0" description="function 'New-NtfsAclIssueReport.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'New-NtfsAclIssueReport.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0106" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'New-NtfsAclIssueReport.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\New-NtfsAclIssueReport.ps1&quot;)" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'New-NtfsAclIssueReport.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'New-NtfsAclIssueReport.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\New-NtfsAclIssueReport.ps1&quot;)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1" executed="True" result="Failure" success="False" time="2.3769" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="help for ConvertTo-SimpleProperty" executed="True" result="Failure" success="False" time="0.147" asserts="0" description="help for ConvertTo-SimpleProperty">
            <results>
              <test-suite type="TestFixture" name="help for ConvertTo-SimpleProperty.- Help for parameter 'InputObject'" executed="True" result="Failure" success="False" time="0.058" asserts="0" description="help for ConvertTo-SimpleProperty.- Help for parameter 'InputObject'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-SimpleProperty.- Help for parameter 'InputObject'.has a description" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-SimpleProperty.- Help for parameter 'InputObject'.has the correct [mandatory] value" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-SimpleProperty.- Help for parameter 'InputObject'.has the correct parameter type" time="0.0195" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-SimpleProperty.- Help for parameter 'Prefix'" executed="True" result="Failure" success="False" time="0.0759" asserts="0" description="help for ConvertTo-SimpleProperty.- Help for parameter 'Prefix'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-SimpleProperty.- Help for parameter 'Prefix'.has a description" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-SimpleProperty.- Help for parameter 'Prefix'.has the correct [mandatory] value" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-SimpleProperty.- Help for parameter 'Prefix'.has the correct parameter type" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-SimpleProperty.- Help for parameter 'Property'" executed="True" result="Failure" success="False" time="0.1036" asserts="0" description="help for ConvertTo-SimpleProperty.- Help for parameter 'Property'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-SimpleProperty.- Help for parameter 'Property'.has a description" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-SimpleProperty.- Help for parameter 'Property'.has the correct [mandatory] value" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-SimpleProperty.- Help for parameter 'Property'.has the correct parameter type" time="0.0159" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for ConvertTo-SimpleProperty.- Help for parameter 'PropertyDictionary'" executed="True" result="Failure" success="False" time="0.1321" asserts="0" description="help for ConvertTo-SimpleProperty.- Help for parameter 'PropertyDictionary'">
                <results>
                  <test-case description="has a description" name="help for ConvertTo-SimpleProperty.- Help for parameter 'PropertyDictionary'.has a description" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for ConvertTo-SimpleProperty.- Help for parameter 'PropertyDictionary'.has the correct [mandatory] value" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for ConvertTo-SimpleProperty.- Help for parameter 'PropertyDictionary'.has the correct parameter type" time="0.0182" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 9
Actual length:   28
Strings differ at index 0.
Expected: 'Hashtable'
But was:  'System.Collections.Hashtable'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for ConvertTo-SimpleProperty.is not auto-generated" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for ConvertTo-SimpleProperty.has a description" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for ConvertTo-SimpleProperty.has example code" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for ConvertTo-SimpleProperty.has example help" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Expand-AccountPermission" executed="True" result="Success" success="True" time="0.2319" asserts="0" description="help for Expand-AccountPermission">
            <results>
              <test-suite type="TestFixture" name="help for Expand-AccountPermission.- Help for parameter 'AccountPermission'" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="help for Expand-AccountPermission.- Help for parameter 'AccountPermission'">
                <results>
                  <test-case description="has a description" name="help for Expand-AccountPermission.- Help for parameter 'AccountPermission'.has a description" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-AccountPermission.- Help for parameter 'AccountPermission'.has the correct [mandatory] value" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-AccountPermission.- Help for parameter 'AccountPermission'.has the correct parameter type" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Expand-AccountPermission.- Help for parameter 'PropertiesToExclude'" executed="True" result="Success" success="True" time="0.0728" asserts="0" description="help for Expand-AccountPermission.- Help for parameter 'PropertiesToExclude'">
                <results>
                  <test-case description="has a description" name="help for Expand-AccountPermission.- Help for parameter 'PropertiesToExclude'.has a description" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-AccountPermission.- Help for parameter 'PropertiesToExclude'.has the correct [mandatory] value" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-AccountPermission.- Help for parameter 'PropertiesToExclude'.has the correct parameter type" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Expand-AccountPermission.is not auto-generated" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Expand-AccountPermission.has a description" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Expand-AccountPermission.has example code" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Expand-AccountPermission.has example help" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Expand-Acl" executed="True" result="Failure" success="False" time="0.3118" asserts="0" description="help for Expand-Acl">
            <results>
              <test-suite type="TestFixture" name="help for Expand-Acl.- Help for parameter 'InputObject'" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="help for Expand-Acl.- Help for parameter 'InputObject'">
                <results>
                  <test-case description="has a description" name="help for Expand-Acl.- Help for parameter 'InputObject'.has a description" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Expand-Acl.- Help for parameter 'InputObject'.has the correct [mandatory] value" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Expand-Acl.- Help for parameter 'InputObject'.has the correct parameter type" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Expand-Acl.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.0681" asserts="0" description="help for Expand-Acl.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Expand-Acl.- Help for parameter 'ProgressAction'.has a description" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Expand-Acl.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0137" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'False', but got $null.</message>
                      <stack-trace>at $parameterHelp.Required | Should -Be $codeMandatory, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:109
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct parameter type" name="help for Expand-Acl.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0064" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'ActionPreference', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Expand-Acl.is not auto-generated" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Expand-Acl.has a description" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Expand-Acl.has example code" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Expand-Acl.has example help" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Find-ServerNameInPath" executed="True" result="Failure" success="False" time="0.3855" asserts="0" description="help for Find-ServerNameInPath">
            <results>
              <test-suite type="TestFixture" name="help for Find-ServerNameInPath.- Help for parameter 'LiteralPath'" executed="True" result="Failure" success="False" time="0.0405" asserts="0" description="help for Find-ServerNameInPath.- Help for parameter 'LiteralPath'">
                <results>
                  <test-case description="has a description" name="help for Find-ServerNameInPath.- Help for parameter 'LiteralPath'.has a description" time="0.0097" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $parameterHelp.Description.Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:103
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:103</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has the correct [mandatory] value" name="help for Find-ServerNameInPath.- Help for parameter 'LiteralPath'.has the correct [mandatory] value" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Find-ServerNameInPath.- Help for parameter 'LiteralPath'.has the correct parameter type" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Find-ServerNameInPath.- Help for parameter 'ThisFqdn'" executed="True" result="Success" success="True" time="0.055" asserts="0" description="help for Find-ServerNameInPath.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for Find-ServerNameInPath.- Help for parameter 'ThisFqdn'.has a description" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Find-ServerNameInPath.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Find-ServerNameInPath.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Find-ServerNameInPath.is not auto-generated" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Find-ServerNameInPath.has a description" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Find-ServerNameInPath.has example code" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Find-ServerNameInPath.has example help" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Format-SecurityPrincipal" executed="True" result="Failure" success="False" time="0.6041" asserts="0" description="help for Format-SecurityPrincipal">
            <results>
              <test-suite type="TestFixture" name="help for Format-SecurityPrincipal.- Help for parameter 'AceGUIDsByResolvedID'" executed="True" result="Failure" success="False" time="0.1304" asserts="0" description="help for Format-SecurityPrincipal.- Help for parameter 'AceGUIDsByResolvedID'">
                <results>
                  <test-case description="has a description" name="help for Format-SecurityPrincipal.- Help for parameter 'AceGUIDsByResolvedID'.has a description" time="0.074" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-SecurityPrincipal.- Help for parameter 'AceGUIDsByResolvedID'.has the correct [mandatory] value" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-SecurityPrincipal.- Help for parameter 'AceGUIDsByResolvedID'.has the correct parameter type" time="0.0096" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 9
Actual length:   28
Strings differ at index 0.
Expected: 'Hashtable'
But was:  'System.Collections.Hashtable'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Format-SecurityPrincipal.- Help for parameter 'ACEsByGUID'" executed="True" result="Failure" success="False" time="0.1635" asserts="0" description="help for Format-SecurityPrincipal.- Help for parameter 'ACEsByGUID'">
                <results>
                  <test-case description="has a description" name="help for Format-SecurityPrincipal.- Help for parameter 'ACEsByGUID'.has a description" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-SecurityPrincipal.- Help for parameter 'ACEsByGUID'.has the correct [mandatory] value" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-SecurityPrincipal.- Help for parameter 'ACEsByGUID'.has the correct parameter type" time="0.0062" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 9
Actual length:   28
Strings differ at index 0.
Expected: 'Hashtable'
But was:  'System.Collections.Hashtable'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Format-SecurityPrincipal.- Help for parameter 'PrincipalsByResolvedID'" executed="True" result="Failure" success="False" time="0.1878" asserts="0" description="help for Format-SecurityPrincipal.- Help for parameter 'PrincipalsByResolvedID'">
                <results>
                  <test-case description="has a description" name="help for Format-SecurityPrincipal.- Help for parameter 'PrincipalsByResolvedID'.has a description" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-SecurityPrincipal.- Help for parameter 'PrincipalsByResolvedID'.has the correct [mandatory] value" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-SecurityPrincipal.- Help for parameter 'PrincipalsByResolvedID'.has the correct parameter type" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 9
Actual length:   28
Strings differ at index 0.
Expected: 'Hashtable'
But was:  'System.Collections.Hashtable'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Format-SecurityPrincipal.- Help for parameter 'ResolvedID'" executed="True" result="Failure" success="False" time="0.2091" asserts="0" description="help for Format-SecurityPrincipal.- Help for parameter 'ResolvedID'">
                <results>
                  <test-case description="has a description" name="help for Format-SecurityPrincipal.- Help for parameter 'ResolvedID'.has a description" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-SecurityPrincipal.- Help for parameter 'ResolvedID'.has the correct [mandatory] value" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-SecurityPrincipal.- Help for parameter 'ResolvedID'.has the correct parameter type" time="0.0125" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Format-SecurityPrincipal.is not auto-generated" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Format-SecurityPrincipal.has a description" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Format-SecurityPrincipal.has example code" time="0.009" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Format-SecurityPrincipal.has example help" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Format-SecurityPrincipalMember" executed="True" result="Failure" success="False" time="0.7266" asserts="0" description="help for Format-SecurityPrincipalMember">
            <results>
              <test-suite type="TestFixture" name="help for Format-SecurityPrincipalMember.- Help for parameter 'Access'" executed="True" result="Failure" success="False" time="0.0358" asserts="0" description="help for Format-SecurityPrincipalMember.- Help for parameter 'Access'">
                <results>
                  <test-case description="has a description" name="help for Format-SecurityPrincipalMember.- Help for parameter 'Access'.has a description" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-SecurityPrincipalMember.- Help for parameter 'Access'.has the correct [mandatory] value" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-SecurityPrincipalMember.- Help for parameter 'Access'.has the correct parameter type" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 8
Actual length:   15
Strings differ at index 0.
Expected: 'Object[]'
But was:  'System.Object[]'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Format-SecurityPrincipalMember.- Help for parameter 'ParentIdentityReference'" executed="True" result="Failure" success="False" time="0.06" asserts="0" description="help for Format-SecurityPrincipalMember.- Help for parameter 'ParentIdentityReference'">
                <results>
                  <test-case description="has a description" name="help for Format-SecurityPrincipalMember.- Help for parameter 'ParentIdentityReference'.has a description" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-SecurityPrincipalMember.- Help for parameter 'ParentIdentityReference'.has the correct [mandatory] value" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-SecurityPrincipalMember.- Help for parameter 'ParentIdentityReference'.has the correct parameter type" time="0.0149" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Format-SecurityPrincipalMember.- Help for parameter 'PrincipalsByResolvedID'" executed="True" result="Failure" success="False" time="0.0814" asserts="0" description="help for Format-SecurityPrincipalMember.- Help for parameter 'PrincipalsByResolvedID'">
                <results>
                  <test-case description="has a description" name="help for Format-SecurityPrincipalMember.- Help for parameter 'PrincipalsByResolvedID'.has a description" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-SecurityPrincipalMember.- Help for parameter 'PrincipalsByResolvedID'.has the correct [mandatory] value" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-SecurityPrincipalMember.- Help for parameter 'PrincipalsByResolvedID'.has the correct parameter type" time="0.0101" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 9
Actual length:   28
Strings differ at index 0.
Expected: 'Hashtable'
But was:  'System.Collections.Hashtable'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Format-SecurityPrincipalMember.- Help for parameter 'ResolvedID'" executed="True" result="Failure" success="False" time="0.1116" asserts="0" description="help for Format-SecurityPrincipalMember.- Help for parameter 'ResolvedID'">
                <results>
                  <test-case description="has a description" name="help for Format-SecurityPrincipalMember.- Help for parameter 'ResolvedID'.has a description" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-SecurityPrincipalMember.- Help for parameter 'ResolvedID'.has the correct [mandatory] value" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-SecurityPrincipalMember.- Help for parameter 'ResolvedID'.has the correct parameter type" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 8
Actual length:   15
Strings differ at index 0.
Expected: 'Object[]'
But was:  'System.Object[]'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Format-SecurityPrincipalMember.is not auto-generated" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Format-SecurityPrincipalMember.has a description" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Format-SecurityPrincipalMember.has example code" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Format-SecurityPrincipalMember.has example help" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Format-SecurityPrincipalMemberUser" executed="True" result="Failure" success="False" time="0.7824" asserts="0" description="help for Format-SecurityPrincipalMemberUser">
            <results>
              <test-suite type="TestFixture" name="help for Format-SecurityPrincipalMemberUser.- Help for parameter 'InputObject'" executed="True" result="Failure" success="False" time="0.0436" asserts="0" description="help for Format-SecurityPrincipalMemberUser.- Help for parameter 'InputObject'">
                <results>
                  <test-case description="has a description" name="help for Format-SecurityPrincipalMemberUser.- Help for parameter 'InputObject'.has a description" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-SecurityPrincipalMemberUser.- Help for parameter 'InputObject'.has the correct [mandatory] value" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-SecurityPrincipalMemberUser.- Help for parameter 'InputObject'.has the correct parameter type" time="0.0062" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Format-SecurityPrincipalMemberUser.is not auto-generated" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Format-SecurityPrincipalMemberUser.has a description" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Format-SecurityPrincipalMemberUser.has example code" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Format-SecurityPrincipalMemberUser.has example help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Format-SecurityPrincipalName" executed="True" result="Failure" success="False" time="0.8316" asserts="0" description="help for Format-SecurityPrincipalName">
            <results>
              <test-suite type="TestFixture" name="help for Format-SecurityPrincipalName.- Help for parameter 'InputObject'" executed="True" result="Failure" success="False" time="0.0403" asserts="0" description="help for Format-SecurityPrincipalName.- Help for parameter 'InputObject'">
                <results>
                  <test-case description="has a description" name="help for Format-SecurityPrincipalName.- Help for parameter 'InputObject'.has a description" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-SecurityPrincipalName.- Help for parameter 'InputObject'.has the correct [mandatory] value" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-SecurityPrincipalName.- Help for parameter 'InputObject'.has the correct parameter type" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Format-SecurityPrincipalName.is not auto-generated" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Format-SecurityPrincipalName.has a description" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Format-SecurityPrincipalName.has example code" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Format-SecurityPrincipalName.has example help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Format-SecurityPrincipalUser" executed="True" result="Failure" success="False" time="0.8965" asserts="0" description="help for Format-SecurityPrincipalUser">
            <results>
              <test-suite type="TestFixture" name="help for Format-SecurityPrincipalUser.- Help for parameter 'InputObject'" executed="True" result="Failure" success="False" time="0.0506" asserts="0" description="help for Format-SecurityPrincipalUser.- Help for parameter 'InputObject'">
                <results>
                  <test-case description="has a description" name="help for Format-SecurityPrincipalUser.- Help for parameter 'InputObject'.has a description" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-SecurityPrincipalUser.- Help for parameter 'InputObject'.has the correct [mandatory] value" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-SecurityPrincipalUser.- Help for parameter 'InputObject'.has the correct parameter type" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Format-SecurityPrincipalUser.is not auto-generated" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Format-SecurityPrincipalUser.has a description" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Format-SecurityPrincipalUser.has example code" time="0.0122" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Format-SecurityPrincipalUser.has example help" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-DirectorySecurity" executed="True" result="Failure" success="False" time="0.9885" asserts="0" description="help for Get-DirectorySecurity">
            <results>
              <test-suite type="TestFixture" name="help for Get-DirectorySecurity.- Help for parameter 'LiteralPath'" executed="True" result="Success" success="True" time="0.0462" asserts="0" description="help for Get-DirectorySecurity.- Help for parameter 'LiteralPath'">
                <results>
                  <test-case description="has a description" name="help for Get-DirectorySecurity.- Help for parameter 'LiteralPath'.has a description" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-DirectorySecurity.- Help for parameter 'LiteralPath'.has the correct [mandatory] value" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-DirectorySecurity.- Help for parameter 'LiteralPath'.has the correct parameter type" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-DirectorySecurity.- Help for parameter 'Sections'" executed="True" result="Failure" success="False" time="0.0804" asserts="0" description="help for Get-DirectorySecurity.- Help for parameter 'Sections'">
                <results>
                  <test-case description="has a description" name="help for Get-DirectorySecurity.- Help for parameter 'Sections'.has a description" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-DirectorySecurity.- Help for parameter 'Sections'.has the correct [mandatory] value" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-DirectorySecurity.- Help for parameter 'Sections'.has the correct parameter type" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'AccessControlSections', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-DirectorySecurity.is not auto-generated" time="0.005" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-DirectorySecurity.has a description" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-DirectorySecurity.has example code" time="0.013" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected a value, but got $null or empty.</message>
                  <stack-trace>at ($commandHelp.Examples.Example | Select-Object -First 1).Code | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:80
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:80</stack-trace>
                </failure>
              </test-case>
              <test-case description="has example help" name="help for Get-DirectorySecurity.has example help" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected a value, but got $null or empty.</message>
                  <stack-trace>at ($commandHelp.Examples.Example.Remarks | Select-Object -First 1).Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:85
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:85</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-FileSystemAccessRule" executed="True" result="Failure" success="False" time="1.1941" asserts="0" description="help for Get-FileSystemAccessRule">
            <results>
              <test-suite type="TestFixture" name="help for Get-FileSystemAccessRule.- Help for parameter 'AccountType'" executed="True" result="Success" success="True" time="0.0495" asserts="0" description="help for Get-FileSystemAccessRule.- Help for parameter 'AccountType'">
                <results>
                  <test-case description="has a description" name="help for Get-FileSystemAccessRule.- Help for parameter 'AccountType'.has a description" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FileSystemAccessRule.- Help for parameter 'AccountType'.has the correct [mandatory] value" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FileSystemAccessRule.- Help for parameter 'AccountType'.has the correct parameter type" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FileSystemAccessRule.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.0679" asserts="0" description="help for Get-FileSystemAccessRule.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Get-FileSystemAccessRule.- Help for parameter 'DebugOutputStream'.has a description" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FileSystemAccessRule.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FileSystemAccessRule.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FileSystemAccessRule.- Help for parameter 'DirectorySecurity'" executed="True" result="Success" success="True" time="0.0895" asserts="0" description="help for Get-FileSystemAccessRule.- Help for parameter 'DirectorySecurity'">
                <results>
                  <test-case description="has a description" name="help for Get-FileSystemAccessRule.- Help for parameter 'DirectorySecurity'.has a description" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FileSystemAccessRule.- Help for parameter 'DirectorySecurity'.has the correct [mandatory] value" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FileSystemAccessRule.- Help for parameter 'DirectorySecurity'.has the correct parameter type" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FileSystemAccessRule.- Help for parameter 'IncludeExplicitRules'" executed="True" result="Success" success="True" time="0.1087" asserts="0" description="help for Get-FileSystemAccessRule.- Help for parameter 'IncludeExplicitRules'">
                <results>
                  <test-case description="has a description" name="help for Get-FileSystemAccessRule.- Help for parameter 'IncludeExplicitRules'.has a description" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FileSystemAccessRule.- Help for parameter 'IncludeExplicitRules'.has the correct [mandatory] value" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FileSystemAccessRule.- Help for parameter 'IncludeExplicitRules'.has the correct parameter type" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FileSystemAccessRule.- Help for parameter 'IncludeInherited'" executed="True" result="Success" success="True" time="0.1317" asserts="0" description="help for Get-FileSystemAccessRule.- Help for parameter 'IncludeInherited'">
                <results>
                  <test-case description="has a description" name="help for Get-FileSystemAccessRule.- Help for parameter 'IncludeInherited'.has a description" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FileSystemAccessRule.- Help for parameter 'IncludeInherited'.has the correct [mandatory] value" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FileSystemAccessRule.- Help for parameter 'IncludeInherited'.has the correct parameter type" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FileSystemAccessRule.- Help for parameter 'LogMsgCache'" executed="True" result="Success" success="True" time="0.1478" asserts="0" description="help for Get-FileSystemAccessRule.- Help for parameter 'LogMsgCache'">
                <results>
                  <test-case description="has a description" name="help for Get-FileSystemAccessRule.- Help for parameter 'LogMsgCache'.has a description" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FileSystemAccessRule.- Help for parameter 'LogMsgCache'.has the correct [mandatory] value" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FileSystemAccessRule.- Help for parameter 'LogMsgCache'.has the correct parameter type" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FileSystemAccessRule.- Help for parameter 'TodaysHostname'" executed="True" result="Success" success="True" time="0.1692" asserts="0" description="help for Get-FileSystemAccessRule.- Help for parameter 'TodaysHostname'">
                <results>
                  <test-case description="has a description" name="help for Get-FileSystemAccessRule.- Help for parameter 'TodaysHostname'.has a description" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FileSystemAccessRule.- Help for parameter 'TodaysHostname'.has the correct [mandatory] value" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FileSystemAccessRule.- Help for parameter 'TodaysHostname'.has the correct parameter type" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FileSystemAccessRule.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.1833" asserts="0" description="help for Get-FileSystemAccessRule.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Get-FileSystemAccessRule.- Help for parameter 'WhoAmI'.has a description" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FileSystemAccessRule.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FileSystemAccessRule.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-FileSystemAccessRule.is not auto-generated" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-FileSystemAccessRule.has a description" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-FileSystemAccessRule.has example code" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected a value, but got $null or empty.</message>
                  <stack-trace>at ($commandHelp.Examples.Example | Select-Object -First 1).Code | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:80
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:80</stack-trace>
                </failure>
              </test-case>
              <test-case description="has example help" name="help for Get-FileSystemAccessRule.has example help" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected a value, but got $null or empty.</message>
                  <stack-trace>at ($commandHelp.Examples.Example.Remarks | Select-Object -First 1).Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:85
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:85</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-FolderAcl" executed="True" result="Failure" success="False" time="1.4308" asserts="0" description="help for Get-FolderAcl">
            <results>
              <test-suite type="TestFixture" name="help for Get-FolderAcl.- Help for parameter 'AccountType'" executed="True" result="Success" success="True" time="0.0497" asserts="0" description="help for Get-FolderAcl.- Help for parameter 'AccountType'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderAcl.- Help for parameter 'AccountType'.has a description" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderAcl.- Help for parameter 'AccountType'.has the correct [mandatory] value" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderAcl.- Help for parameter 'AccountType'.has the correct parameter type" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FolderAcl.- Help for parameter 'ACLsByPath'" executed="True" result="Success" success="True" time="0.0696" asserts="0" description="help for Get-FolderAcl.- Help for parameter 'ACLsByPath'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderAcl.- Help for parameter 'ACLsByPath'.has a description" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderAcl.- Help for parameter 'ACLsByPath'.has the correct [mandatory] value" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderAcl.- Help for parameter 'ACLsByPath'.has the correct parameter type" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FolderAcl.- Help for parameter 'DebugOutputStream'" executed="True" result="Success" success="True" time="0.0825" asserts="0" description="help for Get-FolderAcl.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderAcl.- Help for parameter 'DebugOutputStream'.has a description" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderAcl.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderAcl.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FolderAcl.- Help for parameter 'IncludeExplicitRules'" executed="True" result="Success" success="True" time="0.1011" asserts="0" description="help for Get-FolderAcl.- Help for parameter 'IncludeExplicitRules'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderAcl.- Help for parameter 'IncludeExplicitRules'.has a description" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderAcl.- Help for parameter 'IncludeExplicitRules'.has the correct [mandatory] value" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderAcl.- Help for parameter 'IncludeExplicitRules'.has the correct parameter type" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FolderAcl.- Help for parameter 'IncludeInherited'" executed="True" result="Success" success="True" time="0.1139" asserts="0" description="help for Get-FolderAcl.- Help for parameter 'IncludeInherited'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderAcl.- Help for parameter 'IncludeInherited'.has a description" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderAcl.- Help for parameter 'IncludeInherited'.has the correct [mandatory] value" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderAcl.- Help for parameter 'IncludeInherited'.has the correct parameter type" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FolderAcl.- Help for parameter 'LiteralPath'" executed="True" result="Success" success="True" time="0.1305" asserts="0" description="help for Get-FolderAcl.- Help for parameter 'LiteralPath'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderAcl.- Help for parameter 'LiteralPath'.has a description" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderAcl.- Help for parameter 'LiteralPath'.has the correct [mandatory] value" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderAcl.- Help for parameter 'LiteralPath'.has the correct parameter type" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FolderAcl.- Help for parameter 'LogMsgCache'" executed="True" result="Success" success="True" time="0.1471" asserts="0" description="help for Get-FolderAcl.- Help for parameter 'LogMsgCache'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderAcl.- Help for parameter 'LogMsgCache'.has a description" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderAcl.- Help for parameter 'LogMsgCache'.has the correct [mandatory] value" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderAcl.- Help for parameter 'LogMsgCache'.has the correct parameter type" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FolderAcl.- Help for parameter 'OwnerCache'" executed="True" result="Success" success="True" time="0.1654" asserts="0" description="help for Get-FolderAcl.- Help for parameter 'OwnerCache'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderAcl.- Help for parameter 'OwnerCache'.has a description" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderAcl.- Help for parameter 'OwnerCache'.has the correct [mandatory] value" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderAcl.- Help for parameter 'OwnerCache'.has the correct parameter type" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FolderAcl.- Help for parameter 'Sections'" executed="True" result="Failure" success="False" time="0.1879" asserts="0" description="help for Get-FolderAcl.- Help for parameter 'Sections'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderAcl.- Help for parameter 'Sections'.has a description" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderAcl.- Help for parameter 'Sections'.has the correct [mandatory] value" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderAcl.- Help for parameter 'Sections'.has the correct parameter type" time="0.0109" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'AccessControlSections', but got $null.</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FolderAcl.- Help for parameter 'ThisHostname'" executed="True" result="Success" success="True" time="0.2009" asserts="0" description="help for Get-FolderAcl.- Help for parameter 'ThisHostname'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderAcl.- Help for parameter 'ThisHostname'.has a description" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderAcl.- Help for parameter 'ThisHostname'.has the correct [mandatory] value" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderAcl.- Help for parameter 'ThisHostname'.has the correct parameter type" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-FolderAcl.- Help for parameter 'WhoAmI'" executed="True" result="Success" success="True" time="0.2235" asserts="0" description="help for Get-FolderAcl.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderAcl.- Help for parameter 'WhoAmI'.has a description" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderAcl.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderAcl.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-FolderAcl.is not auto-generated" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-FolderAcl.has a description" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-FolderAcl.has example code" time="0.0141" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected a value, but got $null or empty.</message>
                  <stack-trace>at ($commandHelp.Examples.Example | Select-Object -First 1).Code | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:80
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:80</stack-trace>
                </failure>
              </test-case>
              <test-case description="has example help" name="help for Get-FolderAcl.has example help" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected a value, but got $null or empty.</message>
                  <stack-trace>at ($commandHelp.Examples.Example.Remarks | Select-Object -First 1).Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:85
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:85</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-OwnerAce" executed="True" result="Failure" success="False" time="1.5799" asserts="0" description="help for Get-OwnerAce">
            <results>
              <test-suite type="TestFixture" name="help for Get-OwnerAce.- Help for parameter 'ACLsByPath'" executed="True" result="Failure" success="False" time="0.043" asserts="0" description="help for Get-OwnerAce.- Help for parameter 'ACLsByPath'">
                <results>
                  <test-case description="has a description" name="help for Get-OwnerAce.- Help for parameter 'ACLsByPath'.has a description" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-OwnerAce.- Help for parameter 'ACLsByPath'.has the correct [mandatory] value" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-OwnerAce.- Help for parameter 'ACLsByPath'.has the correct parameter type" time="0.0089" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 9
Actual length:   28
Strings differ at index 0.
Expected: 'Hashtable'
But was:  'System.Collections.Hashtable'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-OwnerAce.- Help for parameter 'Item'" executed="True" result="Failure" success="False" time="0.1391" asserts="0" description="help for Get-OwnerAce.- Help for parameter 'Item'">
                <results>
                  <test-case description="has a description" name="help for Get-OwnerAce.- Help for parameter 'Item'.has a description" time="0.0301" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-OwnerAce.- Help for parameter 'Item'.has the correct [mandatory] value" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-OwnerAce.- Help for parameter 'Item'.has the correct parameter type" time="0.0093" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-OwnerAce.is not auto-generated" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-OwnerAce.has a description" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-OwnerAce.has example code" time="0.0114" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-OwnerAce.has example help" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-ServerFromFilePath" executed="True" result="Failure" success="False" time="1.6505" asserts="0" description="help for Get-ServerFromFilePath">
            <results>
              <test-suite type="TestFixture" name="help for Get-ServerFromFilePath.- Help for parameter 'FilePath'" executed="True" result="Failure" success="False" time="0.0422" asserts="0" description="help for Get-ServerFromFilePath.- Help for parameter 'FilePath'">
                <results>
                  <test-case description="has a description" name="help for Get-ServerFromFilePath.- Help for parameter 'FilePath'.has a description" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-ServerFromFilePath.- Help for parameter 'FilePath'.has the correct [mandatory] value" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-ServerFromFilePath.- Help for parameter 'FilePath'.has the correct parameter type" time="0.0134" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-ServerFromFilePath.- Help for parameter 'ThisFqdn'" executed="True" result="Failure" success="False" time="0.059" asserts="0" description="help for Get-ServerFromFilePath.- Help for parameter 'ThisFqdn'">
                <results>
                  <test-case description="has a description" name="help for Get-ServerFromFilePath.- Help for parameter 'ThisFqdn'.has a description" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-ServerFromFilePath.- Help for parameter 'ThisFqdn'.has the correct [mandatory] value" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-ServerFromFilePath.- Help for parameter 'ThisFqdn'.has the correct parameter type" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-ServerFromFilePath.is not auto-generated" time="0.011" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-ServerFromFilePath.has a description" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-ServerFromFilePath.has example code" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-ServerFromFilePath.has example help" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-Subfolder" executed="True" result="Failure" success="False" time="1.8396" asserts="0" description="help for Get-Subfolder">
            <results>
              <test-suite type="TestFixture" name="help for Get-Subfolder.- Help for parameter 'DebugOutputStream'" executed="True" result="Failure" success="False" time="0.0523" asserts="0" description="help for Get-Subfolder.- Help for parameter 'DebugOutputStream'">
                <results>
                  <test-case description="has a description" name="help for Get-Subfolder.- Help for parameter 'DebugOutputStream'.has a description" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-Subfolder.- Help for parameter 'DebugOutputStream'.has the correct [mandatory] value" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-Subfolder.- Help for parameter 'DebugOutputStream'.has the correct parameter type" time="0.0192" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-Subfolder.- Help for parameter 'FolderRecursionDepth'" executed="True" result="Failure" success="False" time="0.0704" asserts="0" description="help for Get-Subfolder.- Help for parameter 'FolderRecursionDepth'">
                <results>
                  <test-case description="has a description" name="help for Get-Subfolder.- Help for parameter 'FolderRecursionDepth'.has a description" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-Subfolder.- Help for parameter 'FolderRecursionDepth'.has the correct [mandatory] value" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-Subfolder.- Help for parameter 'FolderRecursionDepth'.has the correct parameter type" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 5
Actual length:   12
Strings differ at index 0.
Expected: 'Int32'
But was:  'System.Int32'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-Subfolder.- Help for parameter 'LogMsgCache'" executed="True" result="Failure" success="False" time="0.0938" asserts="0" description="help for Get-Subfolder.- Help for parameter 'LogMsgCache'">
                <results>
                  <test-case description="has a description" name="help for Get-Subfolder.- Help for parameter 'LogMsgCache'.has a description" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-Subfolder.- Help for parameter 'LogMsgCache'.has the correct [mandatory] value" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-Subfolder.- Help for parameter 'LogMsgCache'.has the correct parameter type" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 9
Actual length:   28
Strings differ at index 0.
Expected: 'Hashtable'
But was:  'System.Collections.Hashtable'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-Subfolder.- Help for parameter 'ProgressAction'" executed="True" result="Failure" success="False" time="0.1143" asserts="0" description="help for Get-Subfolder.- Help for parameter 'ProgressAction'">
                <results>
                  <test-case description="has a description" name="help for Get-Subfolder.- Help for parameter 'ProgressAction'.has a description" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-Subfolder.- Help for parameter 'ProgressAction'.has the correct [mandatory] value" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-Subfolder.- Help for parameter 'ProgressAction'.has the correct parameter type" time="0.0113" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 16
Actual length:   45
Strings differ at index 0.
Expected: 'ActionPreference'
But was:  'System.Management.Automation.ActionPreference'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-Subfolder.- Help for parameter 'TargetPath'" executed="True" result="Failure" success="False" time="0.1422" asserts="0" description="help for Get-Subfolder.- Help for parameter 'TargetPath'">
                <results>
                  <test-case description="has a description" name="help for Get-Subfolder.- Help for parameter 'TargetPath'.has a description" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-Subfolder.- Help for parameter 'TargetPath'.has the correct [mandatory] value" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-Subfolder.- Help for parameter 'TargetPath'.has the correct parameter type" time="0.0168" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-Subfolder.- Help for parameter 'ThisHostname'" executed="True" result="Failure" success="False" time="0.1582" asserts="0" description="help for Get-Subfolder.- Help for parameter 'ThisHostname'">
                <results>
                  <test-case description="has a description" name="help for Get-Subfolder.- Help for parameter 'ThisHostname'.has a description" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-Subfolder.- Help for parameter 'ThisHostname'.has the correct [mandatory] value" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-Subfolder.- Help for parameter 'ThisHostname'.has the correct parameter type" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-Subfolder.- Help for parameter 'WhoAmI'" executed="True" result="Failure" success="False" time="0.1797" asserts="0" description="help for Get-Subfolder.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for Get-Subfolder.- Help for parameter 'WhoAmI'.has a description" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-Subfolder.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-Subfolder.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0065" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-Subfolder.is not auto-generated" time="0.0124" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-Subfolder.has a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-Subfolder.has example code" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-Subfolder.has example help" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for New-NtfsAclIssueReport" executed="True" result="Failure" success="False" time="2.0245" asserts="0" description="help for New-NtfsAclIssueReport">
            <results>
              <test-suite type="TestFixture" name="help for New-NtfsAclIssueReport.- Help for parameter 'FolderPermissions'" executed="True" result="Failure" success="False" time="0.0537" asserts="0" description="help for New-NtfsAclIssueReport.- Help for parameter 'FolderPermissions'">
                <results>
                  <test-case description="has a description" name="help for New-NtfsAclIssueReport.- Help for parameter 'FolderPermissions'.has a description" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-NtfsAclIssueReport.- Help for parameter 'FolderPermissions'.has the correct [mandatory] value" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-NtfsAclIssueReport.- Help for parameter 'FolderPermissions'.has the correct parameter type" time="0.0158" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-NtfsAclIssueReport.- Help for parameter 'GroupNameRule'" executed="True" result="Failure" success="False" time="0.0732" asserts="0" description="help for New-NtfsAclIssueReport.- Help for parameter 'GroupNameRule'">
                <results>
                  <test-case description="has a description" name="help for New-NtfsAclIssueReport.- Help for parameter 'GroupNameRule'.has a description" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-NtfsAclIssueReport.- Help for parameter 'GroupNameRule'.has the correct [mandatory] value" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-NtfsAclIssueReport.- Help for parameter 'GroupNameRule'.has the correct parameter type" time="0.0094" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 11
Actual length:   40
Strings differ at index 1.
Expected: 'ScriptBlock'
But was:  'System.Management.Automation.ScriptBlock'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-NtfsAclIssueReport.- Help for parameter 'LogMsgCache'" executed="True" result="Failure" success="False" time="0.105" asserts="0" description="help for New-NtfsAclIssueReport.- Help for parameter 'LogMsgCache'">
                <results>
                  <test-case description="has a description" name="help for New-NtfsAclIssueReport.- Help for parameter 'LogMsgCache'.has a description" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-NtfsAclIssueReport.- Help for parameter 'LogMsgCache'.has the correct [mandatory] value" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-NtfsAclIssueReport.- Help for parameter 'LogMsgCache'.has the correct parameter type" time="0.0115" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 9
Actual length:   28
Strings differ at index 0.
Expected: 'Hashtable'
But was:  'System.Collections.Hashtable'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-NtfsAclIssueReport.- Help for parameter 'ThisHostName'" executed="True" result="Failure" success="False" time="0.1293" asserts="0" description="help for New-NtfsAclIssueReport.- Help for parameter 'ThisHostName'">
                <results>
                  <test-case description="has a description" name="help for New-NtfsAclIssueReport.- Help for parameter 'ThisHostName'.has a description" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-NtfsAclIssueReport.- Help for parameter 'ThisHostName'.has the correct [mandatory] value" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-NtfsAclIssueReport.- Help for parameter 'ThisHostName'.has the correct parameter type" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-NtfsAclIssueReport.- Help for parameter 'UserPermissions'" executed="True" result="Failure" success="False" time="0.1487" asserts="0" description="help for New-NtfsAclIssueReport.- Help for parameter 'UserPermissions'">
                <results>
                  <test-case description="has a description" name="help for New-NtfsAclIssueReport.- Help for parameter 'UserPermissions'.has a description" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-NtfsAclIssueReport.- Help for parameter 'UserPermissions'.has the correct [mandatory] value" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-NtfsAclIssueReport.- Help for parameter 'UserPermissions'.has the correct parameter type" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-NtfsAclIssueReport.- Help for parameter 'WhoAmI'" executed="True" result="Failure" success="False" time="0.1756" asserts="0" description="help for New-NtfsAclIssueReport.- Help for parameter 'WhoAmI'">
                <results>
                  <test-case description="has a description" name="help for New-NtfsAclIssueReport.- Help for parameter 'WhoAmI'.has a description" time="0.0115" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-NtfsAclIssueReport.- Help for parameter 'WhoAmI'.has the correct [mandatory] value" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-NtfsAclIssueReport.- Help for parameter 'WhoAmI'.has the correct parameter type" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for New-NtfsAclIssueReport.is not auto-generated" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for New-NtfsAclIssueReport.has a description" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for New-NtfsAclIssueReport.has example code" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for New-NtfsAclIssueReport.has example help" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Manifest.tests.ps1" executed="True" result="Failure" success="False" time="0.2043" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Manifest.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="module manifest 'PsNtfs.psd1'" executed="True" result="Failure" success="False" time="0.0511" asserts="0" description="module manifest 'PsNtfs.psd1'">
            <results>
              <test-suite type="TestFixture" name="module manifest 'PsNtfs.psd1'.- Validation" executed="True" result="Failure" success="False" time="0.0487" asserts="0" description="module manifest 'PsNtfs.psd1'.- Validation">
                <results>
                  <test-case description="is a valid manifest" name="module manifest 'PsNtfs.psd1'.- Validation.is a valid manifest" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid name in the manifest" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid name in the manifest" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid root module" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid root module" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   11
Strings differ at index 6.
Expected: 'PsNtfs'
But was:  'PsNtfs.psm1'
           ------^</message>
                      <stack-trace>at $manifestData.RootModule | Should -Be $moduleName, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Manifest.tests.ps1:36
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Manifest.tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has a valid version" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid version" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid description" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid description" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid author" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid author" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid guid" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid guid" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid copyright" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid copyright" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Git tagging" executed="True" result="Ignored" success="True" time="0.0656" asserts="0" description="Git tagging">
            <results>
              <test-suite type="TestFixture" name="Git tagging.- Git tag version ''" executed="True" result="Ignored" success="True" time="0.0121" asserts="0" description="Git tagging.- Git tag version ''">
                <results>
                  <test-case description="is a valid version" name="Git tagging.- Git tag version ''.is a valid version" time="0.0056" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="matches the module manifest version" name="Git tagging.- Git tag version ''.matches the module manifest version" time="0.0035" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Metadata.tests.ps1" executed="True" result="Success" success="True" time="0.1725" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Metadata.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="text files" executed="True" result="Success" success="True" time="0.0207" asserts="0" description="text files">
            <results>
              <test-suite type="TestFixture" name="text files.- File Encoding" executed="True" result="Success" success="True" time="0.0098" asserts="0" description="text files.- File Encoding">
                <results>
                  <test-case description="do not use Unicode/UTF-16 encoding" name="text files.- File Encoding.do not use Unicode/UTF-16 encoding" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="text files.- Indentations" executed="True" result="Success" success="True" time="0.0178" asserts="0" description="text files.- Indentations">
                <results>
                  <test-case description="do not use tabs for indentations" name="text files.- Indentations.do not use tabs for indentations" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Module.tests.ps1" executed="True" result="Success" success="True" time="0.0914" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Module.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="PowerShell files in module 'PsNtfs'" executed="True" result="Success" success="True" time="0.0287" asserts="0" description="PowerShell files in module 'PsNtfs'">
            <results>
              <test-suite type="ParameterizedTest" name="PowerShell files in module 'PsNtfs'.'&lt;Script&gt;' can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0256" asserts="0" description="'&lt;Script&gt;' can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\dist\2.0.178\PsNtfs\PsNtfs.psd1' can be tokenized by the PowerShell parser without any errors" name="PowerShell files in module 'PsNtfs'.'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\dist\2.0.178\PsNtfs\PsNtfs.psd1' can be tokenized by the PowerShell parser without any errors" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\dist\2.0.178\PsNtfs\PsNtfs.psm1' can be tokenized by the PowerShell parser without any errors" name="PowerShell files in module 'PsNtfs'.'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\dist\2.0.178\PsNtfs\PsNtfs.psm1' can be tokenized by the PowerShell parser without any errors" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="module 'PsNtfs'" executed="True" result="Success" success="True" time="0.0502" asserts="0" description="module 'PsNtfs'">
            <results>
              <test-suite type="ParameterizedTest" name="module 'PsNtfs'.can be imported without any errors" executed="True" result="Success" success="True" time="0.0186" asserts="0" description="can be imported without any errors">
                <results>
                  <test-case description="can be imported without any errors" name="module 'PsNtfs'.can be imported without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\dist\2.0.178\PsNtfs\PsNtfs.psm1&quot;)" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Project.tests.ps1" executed="True" result="Success" success="True" time="0.1558" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Project.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="change log" executed="True" result="Success" success="True" time="0.0178" asserts="0" description="change log">
            <results>
              <test-suite type="TestFixture" name="change log.- Version" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="change log.- Version">
                <results>
                  <test-case description="has a valid version" name="change log.- Version.has a valid version" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the same version as the manifest" name="change log.- Version.has the same version as the manifest" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>