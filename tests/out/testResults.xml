<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="100" errors="0" failures="15" not-run="0" inconclusive="0" ignored="0" skipped="2" invalid="0" date="2022-07-09" time="20:32:05">
  <environment nunit-version="2.5.8.0" platform="Microsoft Windows 10 Pro|C:\WINDOWS|\Device\Harddisk0\Partition2" user="Owner" os-version="10.0.19044" user-domain="JLA-LoftHTPC" cwd="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests" clr-version="Unknown" machine-name="JLA-LOFTHTPC" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="4.7346" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Function.tests.ps1" executed="True" result="Success" success="True" time="1.7707" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Function.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="function 'GetDirectories.ps1'" executed="True" result="Success" success="True" time="0.3801" asserts="0" description="function 'GetDirectories.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'GetDirectories.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.2374" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'GetDirectories.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\private\GetDirectories.ps1&quot;)" time="0.2374" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'GetDirectories.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0665" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'GetDirectories.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\private\GetDirectories.ps1&quot;)" time="0.0665" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Format-FolderPermission.ps1'" executed="True" result="Success" success="True" time="0.4467" asserts="0" description="function 'Format-FolderPermission.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Format-FolderPermission.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0293" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Format-FolderPermission.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-FolderPermission.ps1&quot;)" time="0.0293" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Format-FolderPermission.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0331" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Format-FolderPermission.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-FolderPermission.ps1&quot;)" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Format-SecurityPrincipal.ps1'" executed="True" result="Success" success="True" time="0.4986" asserts="0" description="function 'Format-SecurityPrincipal.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Format-SecurityPrincipal.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0134" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Format-SecurityPrincipal.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-SecurityPrincipal.ps1&quot;)" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Format-SecurityPrincipal.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0336" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Format-SecurityPrincipal.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Format-SecurityPrincipal.ps1&quot;)" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-FolderTarget.ps1'" executed="True" result="Success" success="True" time="0.5688" asserts="0" description="function 'Get-FolderTarget.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-FolderTarget.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-FolderTarget.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-FolderTarget.ps1&quot;)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-FolderTarget.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0254" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-FolderTarget.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-FolderTarget.ps1&quot;)" time="0.0254" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-NtfsAccessRule.ps1'" executed="True" result="Success" success="True" time="0.7919" asserts="0" description="function 'Get-NtfsAccessRule.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-NtfsAccessRule.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.1022" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-NtfsAccessRule.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-NtfsAccessRule.ps1&quot;)" time="0.1022" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-NtfsAccessRule.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.1017" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-NtfsAccessRule.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-NtfsAccessRule.ps1&quot;)" time="0.1017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Get-Subfolder.ps1'" executed="True" result="Success" success="True" time="0.8884" asserts="0" description="function 'Get-Subfolder.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Get-Subfolder.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0483" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Get-Subfolder.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-Subfolder.ps1&quot;)" time="0.0483" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Get-Subfolder.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Get-Subfolder.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Get-Subfolder.ps1&quot;)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'New-NtfsAclIssueReport.ps1'" executed="True" result="Success" success="True" time="0.9595" asserts="0" description="function 'New-NtfsAclIssueReport.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'New-NtfsAclIssueReport.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0179" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'New-NtfsAclIssueReport.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\New-NtfsAclIssueReport.ps1&quot;)" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'New-NtfsAclIssueReport.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0336" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'New-NtfsAclIssueReport.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\New-NtfsAclIssueReport.ps1&quot;)" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="function 'Remove-DuplicatesAcrossIgnoredDomains.ps1'" executed="True" result="Success" success="True" time="1.0441" asserts="0" description="function 'Remove-DuplicatesAcrossIgnoredDomains.ps1'">
            <results>
              <test-suite type="ParameterizedTest" name="function 'Remove-DuplicatesAcrossIgnoredDomains.ps1'.can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="can be tokenized by the PowerShell parser without any errors" name="function 'Remove-DuplicatesAcrossIgnoredDomains.ps1'.can be tokenized by the PowerShell parser without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Remove-DuplicatesAcrossIgnoredDomains.ps1&quot;)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="function 'Remove-DuplicatesAcrossIgnoredDomains.ps1'.runs without throwing errors" executed="True" result="Success" success="True" time="0.0348" asserts="0" description="runs without throwing errors">
                <results>
                  <test-case description="runs without throwing errors" name="function 'Remove-DuplicatesAcrossIgnoredDomains.ps1'.runs without throwing errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\src\functions\public\Remove-DuplicatesAcrossIgnoredDomains.ps1&quot;)" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1" executed="True" result="Failure" success="False" time="1.573" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="help for Format-FolderPermission" executed="True" result="Failure" success="False" time="0.385" asserts="0" description="help for Format-FolderPermission">
            <results>
              <test-suite type="TestFixture" name="help for Format-FolderPermission.- Help for parameter 'FileSystemRightsToIgnore'" executed="True" result="Failure" success="False" time="0.296" asserts="0" description="help for Format-FolderPermission.- Help for parameter 'FileSystemRightsToIgnore'">
                <results>
                  <test-case description="has a description" name="help for Format-FolderPermission.- Help for parameter 'FileSystemRightsToIgnore'.has a description" time="0.0205" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-FolderPermission.- Help for parameter 'FileSystemRightsToIgnore'.has the correct [mandatory] value" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-FolderPermission.- Help for parameter 'FileSystemRightsToIgnore'.has the correct parameter type" time="0.1276" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 8
Actual length:   15
Strings differ at index 1.
Expected: 'String[]'
But was:  'System.String[]'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Format-FolderPermission.- Help for parameter 'UserPermission'" executed="True" result="Failure" success="False" time="0.3218" asserts="0" description="help for Format-FolderPermission.- Help for parameter 'UserPermission'">
                <results>
                  <test-case description="has a description" name="help for Format-FolderPermission.- Help for parameter 'UserPermission'.has a description" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-FolderPermission.- Help for parameter 'UserPermission'.has the correct [mandatory] value" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-FolderPermission.- Help for parameter 'UserPermission'.has the correct parameter type" time="0.014" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Format-FolderPermission.is not auto-generated" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Format-FolderPermission.has a description" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Format-FolderPermission.has example code" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Format-FolderPermission.has example help" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Format-SecurityPrincipal" executed="True" result="Failure" success="False" time="0.5401" asserts="0" description="help for Format-SecurityPrincipal">
            <results>
              <test-suite type="TestFixture" name="help for Format-SecurityPrincipal.- Help for parameter 'SecurityPrincipal'" executed="True" result="Failure" success="False" time="0.139" asserts="0" description="help for Format-SecurityPrincipal.- Help for parameter 'SecurityPrincipal'">
                <results>
                  <test-case description="has a description" name="help for Format-SecurityPrincipal.- Help for parameter 'SecurityPrincipal'.has a description" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Format-SecurityPrincipal.- Help for parameter 'SecurityPrincipal'.has the correct [mandatory] value" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Format-SecurityPrincipal.- Help for parameter 'SecurityPrincipal'.has the correct parameter type" time="0.0843" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Format-SecurityPrincipal.is not auto-generated" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Format-SecurityPrincipal.has a description" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Format-SecurityPrincipal.has example code" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Format-SecurityPrincipal.has example help" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-FolderTarget" executed="True" result="Failure" success="False" time="0.673" asserts="0" description="help for Get-FolderTarget">
            <results>
              <test-suite type="TestFixture" name="help for Get-FolderTarget.- Help for parameter 'FolderPath'" executed="True" result="Failure" success="False" time="0.1184" asserts="0" description="help for Get-FolderTarget.- Help for parameter 'FolderPath'">
                <results>
                  <test-case description="has a description" name="help for Get-FolderTarget.- Help for parameter 'FolderPath'.has a description" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-FolderTarget.- Help for parameter 'FolderPath'.has the correct [mandatory] value" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-FolderTarget.- Help for parameter 'FolderPath'.has the correct parameter type" time="0.0226" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 8
Actual length:   15
Strings differ at index 1.
Expected: 'String[]'
But was:  'System.String[]'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-FolderTarget.is not auto-generated" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-FolderTarget.has a description" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-FolderTarget.has example code" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-FolderTarget.has example help" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-NtfsAccessRule" executed="True" result="Failure" success="False" time="0.8186" asserts="0" description="help for Get-NtfsAccessRule">
            <results>
              <test-suite type="TestFixture" name="help for Get-NtfsAccessRule.- Help for parameter 'DirectoryPath'" executed="True" result="Success" success="True" time="0.0947" asserts="0" description="help for Get-NtfsAccessRule.- Help for parameter 'DirectoryPath'">
                <results>
                  <test-case description="has a description" name="help for Get-NtfsAccessRule.- Help for parameter 'DirectoryPath'.has a description" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-NtfsAccessRule.- Help for parameter 'DirectoryPath'.has the correct [mandatory] value" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-NtfsAccessRule.- Help for parameter 'DirectoryPath'.has the correct parameter type" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-NtfsAccessRule.- Help for parameter 'IncludeInherited'" executed="True" result="Success" success="True" time="0.1147" asserts="0" description="help for Get-NtfsAccessRule.- Help for parameter 'IncludeInherited'">
                <results>
                  <test-case description="has a description" name="help for Get-NtfsAccessRule.- Help for parameter 'IncludeInherited'.has a description" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-NtfsAccessRule.- Help for parameter 'IncludeInherited'.has the correct [mandatory] value" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-NtfsAccessRule.- Help for parameter 'IncludeInherited'.has the correct parameter type" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-NtfsAccessRule.is not auto-generated" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-NtfsAccessRule.has a description" time="0.021" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected a value, but got $null or empty.</message>
                  <stack-trace>at $commandHelp.Description | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:75
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:75</stack-trace>
                </failure>
              </test-case>
              <test-case description="has example code" name="help for Get-NtfsAccessRule.has example code" time="0.0154" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected a value, but got $null or empty.</message>
                  <stack-trace>at ($commandHelp.Examples.Example | Select-Object -First 1).Code | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:80
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:80</stack-trace>
                </failure>
              </test-case>
              <test-case description="has example help" name="help for Get-NtfsAccessRule.has example help" time="0.0208" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected a value, but got $null or empty.</message>
                  <stack-trace>at ($commandHelp.Examples.Example.Remarks | Select-Object -First 1).Text | Should -Not -BeNullOrEmpty, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:85
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:85</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Get-Subfolder" executed="True" result="Failure" success="False" time="0.9396" asserts="0" description="help for Get-Subfolder">
            <results>
              <test-suite type="TestFixture" name="help for Get-Subfolder.- Help for parameter 'FolderRecursionDepth'" executed="True" result="Failure" success="False" time="0.0615" asserts="0" description="help for Get-Subfolder.- Help for parameter 'FolderRecursionDepth'">
                <results>
                  <test-case description="has a description" name="help for Get-Subfolder.- Help for parameter 'FolderRecursionDepth'.has a description" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-Subfolder.- Help for parameter 'FolderRecursionDepth'.has the correct [mandatory] value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-Subfolder.- Help for parameter 'FolderRecursionDepth'.has the correct parameter type" time="0.0114" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 5
Actual length:   12
Strings differ at index 0.
Expected: 'Int32'
But was:  'System.Int32'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Get-Subfolder.- Help for parameter 'TargetPath'" executed="True" result="Failure" success="False" time="0.1042" asserts="0" description="help for Get-Subfolder.- Help for parameter 'TargetPath'">
                <results>
                  <test-case description="has a description" name="help for Get-Subfolder.- Help for parameter 'TargetPath'.has a description" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Get-Subfolder.- Help for parameter 'TargetPath'.has the correct [mandatory] value" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Get-Subfolder.- Help for parameter 'TargetPath'.has the correct parameter type" time="0.0178" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 1.
Expected: 'String'
But was:  'System.String'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Get-Subfolder.is not auto-generated" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Get-Subfolder.has a description" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Get-Subfolder.has example code" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Get-Subfolder.has example help" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for New-NtfsAclIssueReport" executed="True" result="Failure" success="False" time="1.1123" asserts="0" description="help for New-NtfsAclIssueReport">
            <results>
              <test-suite type="TestFixture" name="help for New-NtfsAclIssueReport.- Help for parameter 'FolderPermissions'" executed="True" result="Failure" success="False" time="0.0657" asserts="0" description="help for New-NtfsAclIssueReport.- Help for parameter 'FolderPermissions'">
                <results>
                  <test-case description="has a description" name="help for New-NtfsAclIssueReport.- Help for parameter 'FolderPermissions'.has a description" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-NtfsAclIssueReport.- Help for parameter 'FolderPermissions'.has the correct [mandatory] value" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-NtfsAclIssueReport.- Help for parameter 'FolderPermissions'.has the correct parameter type" time="0.0197" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-NtfsAclIssueReport.- Help for parameter 'GroupNamingConvention'" executed="True" result="Failure" success="False" time="0.1106" asserts="0" description="help for New-NtfsAclIssueReport.- Help for parameter 'GroupNamingConvention'">
                <results>
                  <test-case description="has a description" name="help for New-NtfsAclIssueReport.- Help for parameter 'GroupNamingConvention'.has a description" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-NtfsAclIssueReport.- Help for parameter 'GroupNamingConvention'.has the correct [mandatory] value" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-NtfsAclIssueReport.- Help for parameter 'GroupNamingConvention'.has the correct parameter type" time="0.0188" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 11
Actual length:   40
Strings differ at index 1.
Expected: 'ScriptBlock'
But was:  'System.Management.Automation.ScriptBlock'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for New-NtfsAclIssueReport.- Help for parameter 'UserPermissions'" executed="True" result="Failure" success="False" time="0.1573" asserts="0" description="help for New-NtfsAclIssueReport.- Help for parameter 'UserPermissions'">
                <results>
                  <test-case description="has a description" name="help for New-NtfsAclIssueReport.- Help for parameter 'UserPermissions'.has a description" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for New-NtfsAclIssueReport.- Help for parameter 'UserPermissions'.has the correct [mandatory] value" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for New-NtfsAclIssueReport.- Help for parameter 'UserPermissions'.has the correct parameter type" time="0.024" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for New-NtfsAclIssueReport.is not auto-generated" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for New-NtfsAclIssueReport.has a description" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for New-NtfsAclIssueReport.has example code" time="0.0115" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for New-NtfsAclIssueReport.has example help" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="help for Remove-DuplicatesAcrossIgnoredDomains" executed="True" result="Failure" success="False" time="1.2467" asserts="0" description="help for Remove-DuplicatesAcrossIgnoredDomains">
            <results>
              <test-suite type="TestFixture" name="help for Remove-DuplicatesAcrossIgnoredDomains.- Help for parameter 'DomainToIgnore'" executed="True" result="Failure" success="False" time="0.0688" asserts="0" description="help for Remove-DuplicatesAcrossIgnoredDomains.- Help for parameter 'DomainToIgnore'">
                <results>
                  <test-case description="has a description" name="help for Remove-DuplicatesAcrossIgnoredDomains.- Help for parameter 'DomainToIgnore'.has a description" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Remove-DuplicatesAcrossIgnoredDomains.- Help for parameter 'DomainToIgnore'.has the correct [mandatory] value" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Remove-DuplicatesAcrossIgnoredDomains.- Help for parameter 'DomainToIgnore'.has the correct parameter type" time="0.0141" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 8
Actual length:   15
Strings differ at index 1.
Expected: 'String[]'
But was:  'System.String[]'
           -^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="help for Remove-DuplicatesAcrossIgnoredDomains.- Help for parameter 'UserPermission'" executed="True" result="Failure" success="False" time="0.1168" asserts="0" description="help for Remove-DuplicatesAcrossIgnoredDomains.- Help for parameter 'UserPermission'">
                <results>
                  <test-case description="has a description" name="help for Remove-DuplicatesAcrossIgnoredDomains.- Help for parameter 'UserPermission'.has a description" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct [mandatory] value" name="help for Remove-DuplicatesAcrossIgnoredDomains.- Help for parameter 'UserPermission'.has the correct [mandatory] value" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the correct parameter type" name="help for Remove-DuplicatesAcrossIgnoredDomains.- Help for parameter 'UserPermission'.has the correct parameter type" time="0.021" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   13
Strings differ at index 0.
Expected: 'Object'
But was:  'System.Object'
           ^</message>
                      <stack-trace>at $parameterHelpType | Should -Be $parameter.ParameterType.Name, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Help.tests.ps1:114</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-case description="is not auto-generated" name="help for Remove-DuplicatesAcrossIgnoredDomains.is not auto-generated" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has a description" name="help for Remove-DuplicatesAcrossIgnoredDomains.has a description" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example code" name="help for Remove-DuplicatesAcrossIgnoredDomains.has example code" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="has example help" name="help for Remove-DuplicatesAcrossIgnoredDomains.has example help" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Manifest.tests.ps1" executed="True" result="Failure" success="False" time="0.6011" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Manifest.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="module manifest 'PsNtfs.psd1'" executed="True" result="Failure" success="False" time="0.2453" asserts="0" description="module manifest 'PsNtfs.psd1'">
            <results>
              <test-suite type="TestFixture" name="module manifest 'PsNtfs.psd1'.- Validation" executed="True" result="Failure" success="False" time="0.2417" asserts="0" description="module manifest 'PsNtfs.psd1'.- Validation">
                <results>
                  <test-case description="is a valid manifest" name="module manifest 'PsNtfs.psd1'.- Validation.is a valid manifest" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid name in the manifest" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid name in the manifest" time="0.0489" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid root module" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid root module" time="0.0238" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 6
Actual length:   11
Strings differ at index 6.
Expected: 'PsNtfs'
But was:  'PsNtfs.psm1'
           ------^</message>
                      <stack-trace>at $manifestData.RootModule | Should -Be $moduleName, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Manifest.tests.ps1:36
at &lt;ScriptBlock&gt;, E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Manifest.tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has a valid version" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid version" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid description" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid description" time="0.0196" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid author" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid author" time="0.0488" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid guid" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid guid" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has a valid copyright" name="module manifest 'PsNtfs.psd1'.- Validation.has a valid copyright" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Git tagging" executed="True" result="Ignored" success="True" time="0.3034" asserts="0" description="Git tagging">
            <results>
              <test-suite type="TestFixture" name="Git tagging.- Git tag version ''" executed="True" result="Ignored" success="True" time="0.0543" asserts="0" description="Git tagging.- Git tag version ''">
                <results>
                  <test-case description="is a valid version" name="Git tagging.- Git tag version ''.is a valid version" time="0.0433" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="matches the module manifest version" name="Git tagging.- Git tag version ''.matches the module manifest version" time="0.0035" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Metadata.tests.ps1" executed="True" result="Success" success="True" time="0.2978" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Metadata.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="text files" executed="True" result="Success" success="True" time="0.0358" asserts="0" description="text files">
            <results>
              <test-suite type="TestFixture" name="text files.- File Encoding" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="text files.- File Encoding">
                <results>
                  <test-case description="do not use Unicode/UTF-16 encoding" name="text files.- File Encoding.do not use Unicode/UTF-16 encoding" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="text files.- Indentations" executed="True" result="Success" success="True" time="0.0312" asserts="0" description="text files.- Indentations">
                <results>
                  <test-case description="do not use tabs for indentations" name="text files.- Indentations.do not use tabs for indentations" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Module.tests.ps1" executed="True" result="Success" success="True" time="0.2532" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Module.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="PowerShell files in module 'PsNtfs'" executed="True" result="Success" success="True" time="0.0569" asserts="0" description="PowerShell files in module 'PsNtfs'">
            <results>
              <test-suite type="ParameterizedTest" name="PowerShell files in module 'PsNtfs'.'&lt;Script&gt;' can be tokenized by the PowerShell parser without any errors" executed="True" result="Success" success="True" time="0.0538" asserts="0" description="'&lt;Script&gt;' can be tokenized by the PowerShell parser without any errors">
                <results>
                  <test-case description="'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\dist\1.0.25\PsNtfs\PsNtfs.psd1' can be tokenized by the PowerShell parser without any errors" name="PowerShell files in module 'PsNtfs'.'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\dist\1.0.25\PsNtfs\PsNtfs.psd1' can be tokenized by the PowerShell parser without any errors" time="0.0306" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\dist\1.0.25\PsNtfs\PsNtfs.psm1' can be tokenized by the PowerShell parser without any errors" name="PowerShell files in module 'PsNtfs'.'E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\dist\1.0.25\PsNtfs\PsNtfs.psm1' can be tokenized by the PowerShell parser without any errors" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="module 'PsNtfs'" executed="True" result="Success" success="True" time="0.1062" asserts="0" description="module 'PsNtfs'">
            <results>
              <test-suite type="ParameterizedTest" name="module 'PsNtfs'.can be imported without any errors" executed="True" result="Success" success="True" time="0.0461" asserts="0" description="can be imported without any errors">
                <results>
                  <test-case description="can be imported without any errors" name="module 'PsNtfs'.can be imported without any errors(&quot;E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\dist\1.0.25\PsNtfs\PsNtfs.psm1&quot;)" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Project.tests.ps1" executed="True" result="Success" success="True" time="0.2388" asserts="0" description="E:\Owner\Documents\Google Drive\Programs\Scripts\PowerShell\PsNtfs\tests\Project.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="change log" executed="True" result="Success" success="True" time="0.042" asserts="0" description="change log">
            <results>
              <test-suite type="TestFixture" name="change log.- Version" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="change log.- Version">
                <results>
                  <test-case description="has a valid version" name="change log.- Version.has a valid version" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has the same version as the manifest" name="change log.- Version.has the same version as the manifest" time="0.0237" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>